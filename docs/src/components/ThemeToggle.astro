---
import { Icon } from "./icon";
const themeScript = `
  (function() {
    const storageKey = 'starlight-theme';
    const getTheme = () => {
      const stored = localStorage.getItem(storageKey);
      if (stored === 'light' || stored === 'dark') return stored;
      return matchMedia('(prefers-color-scheme: light)').matches ? 'light' : 'dark';
    };
    document.documentElement.dataset.theme = getTheme();
  })();
`;
---
<script is:inline set:html={themeScript} />
<button
  id="custom-theme-toggle"
  class="flex items-center justify-center rounded-md hover:bg-secondary w-8 h-8 mr-1"
  aria-label="Toggle theme">
  <span id="custom-theme-icon" class="relative w-4 h-4">
    <span class="sun-icon absolute inset-0" data-theme-icon="dark">
      <Icon name="Sun" />
    </span>
    <span class="moon-icon absolute inset-0" data-theme-icon="light">
      <Icon name="Moon" />
    </span>
  </span>
</button>

<style>
  :root[data-theme="dark"] [data-theme-icon="light"],
  :root[data-theme="light"] [data-theme-icon="dark"] {
    display: none;
  }
</style>
<script is:inline>
  const storageKey = 'starlight-theme';
  function getPreferredColorScheme() {
    return matchMedia('(prefers-color-scheme: light)').matches ? 'light' : 'dark';
  }
  function loadTheme() {
    return localStorage.getItem(storageKey) || 'auto';
  }
  function storeTheme(theme) {
    localStorage.setItem(storageKey, theme);
  }

  function setTheme(theme) {
    const resolvedTheme = theme === 'auto' ? getPreferredColorScheme() : theme;
    document.documentElement.dataset.theme = resolvedTheme;
    storeTheme(theme);
  }

  function toggleTheme() {
    const currentTheme = document.documentElement.dataset.theme;
    setTheme(currentTheme === 'light' ? 'dark' : 'light');
  }

  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('custom-theme-toggle');
    if (button) {
      button.addEventListener('click', toggleTheme);
    }
  });

  matchMedia('(prefers-color-scheme: light)').addEventListener('change', (e) => {
    if (loadTheme() === 'auto') {
      setTheme('auto');
    }
  });
</script>