---
import CodeBlock from './CodeBlock.astro';  // Import the existing CodeBlock component

interface Step {
  icon: string;
  title: string;
  description: string;
  code: string;
  lang: string;
}

const { steps } = Astro.props as { steps?: Step[] };

if (!steps || steps.length === 0) {
  console.error("Steps component requires a 'steps' prop with at least one step.");
}
---

<div class="steps-container mt-8">
  <p class="text-xl mb-4">Follow these steps to set up and run the project:</p>

  <div class="steps">
    {steps?.map((step, index) => (
      <div key={index} class={`step ${index % 2 !== 0 ? 'ml-8' : ''}`}>  {/* Correctly apply staircase effect */}
        <div class="step-icon text-2xl">{step.icon || '‚ùì'}</div>
        <div class="step-content">
          <h3 class="text-xl font-semibold">{step.title}</h3>
          <p class="text-sm text-gray-600">{step.description}</p>

          {/* Using the existing CodeBlock component */}
          {step.code && step.lang && (
            <CodeBlock code={step.code} lang={step.lang} />
          )}
        </div>
      </div>
    ))}
  </div>
</div>

<style>
  /* Step Layout (Staircase Effect) */
  .steps-container {
    margin-top: 20px;
    padding-left: 0;
  }

  .steps {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .step {
    position: relative;
    padding-left: 20px;
    margin-bottom: 24px;
  }

  /* Staircase effect: Every odd step will shift to the right */
  .step.ml-8 {
    margin-left: 40px;  /* This creates the staircase shift */
  }

  .step-icon {
    margin-right: 16px;
    font-size: 24px;
    display: flex;
    align-items: center;
  }

  .step-content {
    padding-left: 16px;
  }

  .step-content h3 {
    color: #333;
  }

  .step-content p {
    color: #666;
  }

  /* Removed Mint Color and Circle */
  .step::before {
    content: '';
    position: absolute;
    top: 50%;
    left: -10px;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: transparent;  /* No mint color */
  }

  /* Code Block Styling */
  pre {
    background: transparent !important;  /* Ensures background is transparent */
  }

  html[data-theme='light'] pre {
    @apply bg-foreground !important;  /* Apply background for code block in light mode */
  }

  code {
    font-family: 'Courier New', Courier, monospace;
    font-size: 16px;
    color: #555;  /* Dark grey text */
  }

  /* Optional: Slightly darker background when hovered */
  pre:hover {
    background-color: rgba(128, 128, 128, 0.2);  /* Darker transparency when hovered */
  }
</style>
